CREATE TABLE lessons (
    id integer PRIMARY KEY,
    name character varying(255) NOT NULL,
    description text,
    front_end boolean DEFAULT false,
    back_end boolean DEFAULT false,
    price numeric(8, 2) DEFAULT 0.0,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NUll
);

INSERT INTO lessons (id, name, description, price, created_at, updated_at, front_end, back_end)
VALUES (1, 'Ruby', 'Ruby is an interpreted, high-level, general-purpose programming language.', 199.99, current_timestamp, current_timestamp, false, true);

INSERT INTO lessons (id, name, description, price, created_at, updated_at, front_end, back_end)
VALUES (2, 'Python', 'Python is an interpreted, high-level, general-purpose programming language.', 199.99, current_timestamp, current_timestamp, false, true);

INSERT INTO lessons (id, name, description, price, created_at, updated_at, front_end, back_end)
VALUES (3, 'Javascript', 'Javascript is an interpreted, high-level, general-purpose programming language.', 99.99, current_timestamp, current_timestamp, true, true);

INSERT INTO lessons (id, name, description, price, created_at, updated_at, front_end, back_end)
VALUES (4, 'Rust', 'Rust is an interpreted, high-level, general-purpose programming language.', 499.99, current_timestamp, current_timestamp, false, true);

INSERT INTO lessons (id, name, description, price, created_at, updated_at, front_end, back_end)
VALUES (5, 'Golang', 'Go is an interpreted, high-level, general-purpose programming language.', 499.99, current_timestamp, current_timestamp, false, true);

CREATE TABLE instructors (
    id integer PRIMARY KEY,
    first_name character varying(255) not null,
    last_name character varying(255) not null,
    lesson_id integer,
    created_at timestamp without time zone not null,
    updated_at timestamp without time zone not null
);

INSERT INTO instructors (id, first_name, last_name, lesson_id, created_at, updated_at)
VALUES (1, 'Adrian', 'Co', 1, current_timestamp, current_timestamp);

INSERT INTO instructors (id, first_name, last_name, lesson_id, created_at, updated_at)
VALUES (2, 'Analyn', 'Cajocson', 1, current_timestamp, current_timestamp);

INSERT INTO instructors (id, first_name, last_name, lesson_id, created_at, updated_at)
VALUES (3, 'Pau', 'Riosa', 3, current_timestamp, current_timestamp);

INSERT INTO instructors (id, first_name, last_name, lesson_id, created_at, updated_at)
VALUES (4, 'Maurus', 'Vitor', 3, current_timestamp, current_timestamp);

INSERT INTO instructors (id, first_name, last_name, lesson_id, created_at, updated_at)
VALUES (5, 'John', 'Young', 6, current_timestamp, current_timestamp);

##INNER JOIN
SELECT l.name, i.first_name, i.last_name from lessons l INNER JOIN instructors i ON i.lesson_id = l.id;

#LEFT JOIN
SELECT l.name, i.first_name, i.last_name from lessons l LEFT JOIN instructors i ON i.lesson_id = l.id;

#RIGHT JOIN
SELECT l.name, i.first_name, i.last_name from lessons l RIGHT JOIN instructors i ON i.lesson_id = l.id;

#FULL JOIN
SELECT l.name, i.first_name, i.last_name from lessons l FULL JOIN instructors i ON i.lesson_id = l.id;


CREATE TABLE classrooms (
    id integer PRIMARY KEY,
    student_id integer,
    section character varying(10)
);

INSERT INTO classrooms (id, student_id, section)
VALUES (1, 1, 'A');

INSERT INTO classrooms (id, student_id, section)
VALUES (2, 2, 'A');

INSERT INTO classrooms (id, student_id, section)
VALUES (3, 3, 'B');

INSERT INTO classrooms (id, student_id, section)
VALUES (4, 4, 'C');

INSERT INTO classrooms (id, student_id, section)
VALUES (5, 5, 'B');

INSERT INTO classrooms (id, student_id, section)
VALUES (6, 6, 'A');

INSERT INTO classrooms (id, student_id, section)
VALUES (7, 7, 'C');

INSERT INTO classrooms (id, student_id, section)
VALUES (8, 8, 'B');

INSERT INTO classrooms (id, student_id, section)
VALUES (9, 9, 'B');

INSERT INTO classrooms (id, student_id, section)
VALUES (10, 10, 'C');

#INNER JOIN
SELECT * FROM classrooms c INNER JOIN students s ON c.id = s.id; 
